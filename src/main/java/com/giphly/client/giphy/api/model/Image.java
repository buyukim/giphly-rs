/*
 * Giphy
 * Giphy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@giphy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.giphly.client.giphy.api.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Image
 */
@JsonPropertyOrder({
  Image.JSON_PROPERTY_FRAMES,
  Image.JSON_PROPERTY_HEIGHT,
  Image.JSON_PROPERTY_MP4,
  Image.JSON_PROPERTY_MP4_SIZE,
  Image.JSON_PROPERTY_SIZE,
  Image.JSON_PROPERTY_URL,
  Image.JSON_PROPERTY_WEBP,
  Image.JSON_PROPERTY_WEBP_SIZE,
  Image.JSON_PROPERTY_WIDTH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-02-10T13:51:22.963150-06:00[America/Chicago]")
public class Image {
  public static final String JSON_PROPERTY_FRAMES = "frames";
  private String frames;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private String height;

  public static final String JSON_PROPERTY_MP4 = "mp4";
  private String mp4;

  public static final String JSON_PROPERTY_MP4_SIZE = "mp4_size";
  private String mp4Size;

  public static final String JSON_PROPERTY_SIZE = "size";
  private String size;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_WEBP = "webp";
  private String webp;

  public static final String JSON_PROPERTY_WEBP_SIZE = "webp_size";
  private String webpSize;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private String width;


  public Image frames(String frames) {

    this.frames = frames;
    return this;
  }

   /**
   * The number of frames in this GIF.
   * @return frames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "15", value = "The number of frames in this GIF.")
  @JsonProperty(JSON_PROPERTY_FRAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrames() {
    return frames;
  }


  public void setFrames(String frames) {
    this.frames = frames;
  }


  public Image height(String height) {

    this.height = height;
    return this;
  }

   /**
   * The height of this GIF in pixels.
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "200", value = "The height of this GIF in pixels.")
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHeight() {
    return height;
  }


  public void setHeight(String height) {
    this.height = height;
  }


  public Image mp4(String mp4) {

    this.mp4 = mp4;
    return this;
  }

   /**
   * The URL for this GIF in .MP4 format.
   * @return mp4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://media1.giphy.com/media/cZ7rmKfFYOvYI/giphy.mp4", value = "The URL for this GIF in .MP4 format.")
  @JsonProperty(JSON_PROPERTY_MP4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMp4() {
    return mp4;
  }


  public void setMp4(String mp4) {
    this.mp4 = mp4;
  }


  public Image mp4Size(String mp4Size) {

    this.mp4Size = mp4Size;
    return this;
  }

   /**
   * The size in bytes of the .MP4 file corresponding to this GIF.
   * @return mp4Size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "25123", value = "The size in bytes of the .MP4 file corresponding to this GIF.")
  @JsonProperty(JSON_PROPERTY_MP4_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMp4Size() {
    return mp4Size;
  }


  public void setMp4Size(String mp4Size) {
    this.mp4Size = mp4Size;
  }


  public Image size(String size) {

    this.size = size;
    return this;
  }

   /**
   * The size of this GIF in bytes.
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "32381", value = "The size of this GIF in bytes.")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSize() {
    return size;
  }


  public void setSize(String size) {
    this.size = size;
  }


  public Image url(String url) {

    this.url = url;
    return this;
  }

   /**
   * The publicly-accessible direct URL for this GIF.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://media1.giphy.com/media/cZ7rmKfFYOvYI/200.gif", value = "The publicly-accessible direct URL for this GIF.")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public Image webp(String webp) {

    this.webp = webp;
    return this;
  }

   /**
   * The URL for this GIF in .webp format.
   * @return webp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://media1.giphy.com/media/cZ7rmKfFYOvYI/giphy.webp", value = "The URL for this GIF in .webp format.")
  @JsonProperty(JSON_PROPERTY_WEBP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebp() {
    return webp;
  }


  public void setWebp(String webp) {
    this.webp = webp;
  }


  public Image webpSize(String webpSize) {

    this.webpSize = webpSize;
    return this;
  }

   /**
   * The size in bytes of the .webp file corresponding to this GIF.
   * @return webpSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12321", value = "The size in bytes of the .webp file corresponding to this GIF.")
  @JsonProperty(JSON_PROPERTY_WEBP_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebpSize() {
    return webpSize;
  }


  public void setWebpSize(String webpSize) {
    this.webpSize = webpSize;
  }


  public Image width(String width) {

    this.width = width;
    return this;
  }

   /**
   * The width of this GIF in pixels.
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "320", value = "The width of this GIF in pixels.")
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWidth() {
    return width;
  }


  public void setWidth(String width) {
    this.width = width;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Image image = (Image) o;
    return Objects.equals(this.frames, image.frames) &&
        Objects.equals(this.height, image.height) &&
        Objects.equals(this.mp4, image.mp4) &&
        Objects.equals(this.mp4Size, image.mp4Size) &&
        Objects.equals(this.size, image.size) &&
        Objects.equals(this.url, image.url) &&
        Objects.equals(this.webp, image.webp) &&
        Objects.equals(this.webpSize, image.webpSize) &&
        Objects.equals(this.width, image.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frames, height, mp4, mp4Size, size, url, webp, webpSize, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Image {\n");
    sb.append("    frames: ").append(toIndentedString(frames)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    mp4: ").append(toIndentedString(mp4)).append("\n");
    sb.append("    mp4Size: ").append(toIndentedString(mp4Size)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    webp: ").append(toIndentedString(webp)).append("\n");
    sb.append("    webpSize: ").append(toIndentedString(webpSize)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

